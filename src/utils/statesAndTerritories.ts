export enum AreaKind {
  Commonwealth = 'commonwealth',
  Federal = 'federal',
  State = 'state',
  Territory = 'territory',
}

export const STATE_AND_TERRITORY_ABBREVIATIONS = [
  'AK',
  'AL',
  'AR',
  'AS',
  'AZ',
  'CA',
  'CO',
  'CT',
  'DC',
  'DE',
  'FL',
  'GA',
  'GU',
  'HI',
  'IA',
  'ID',
  'IL',
  'IN',
  'KS',
  'KY',
  'LA',
  'MA',
  'MD',
  'ME',
  'MI',
  'MN',
  'MO',
  'MP',
  'MS',
  'MT',
  'NC',
  'ND',
  'NE',
  'NH',
  'NJ',
  'NM',
  'NV',
  'NY',
  'OH',
  'OK',
  'OR',
  'PA',
  'PR',
  'RI',
  'SC',
  'SD',
  'TN',
  'TT',
  'TX',
  'US',
  'UT',
  'VA',
  'VI',
  'VT',
  'WA',
  'WI',
  'WV',
  'WY',
] as const

export type StateAbbreviation = (typeof STATE_AND_TERRITORY_ABBREVIATIONS)[number]

export interface AreaInfo {
  id: StateAbbreviation
  kind: AreaKind
  name: string
  title?: string
}

export const STATES: ReadonlyArray<AreaInfo> = [
  { id: 'AK', name: 'Alaska', kind: AreaKind.State },
  { id: 'AL', name: 'Alabama', kind: AreaKind.State },
  { id: 'AR', name: 'Arkansas', kind: AreaKind.State },
  { id: 'AS', name: 'American Samoa', kind: AreaKind.Territory },
  { id: 'AZ', name: 'Arizona', kind: AreaKind.State },
  { id: 'CA', name: 'California', kind: AreaKind.State },
  { id: 'CO', name: 'Colorado', kind: AreaKind.State },
  { id: 'CT', name: 'Connecticut', kind: AreaKind.State },
  { id: 'DC', name: 'District of Columbia', kind: AreaKind.Federal, title: 'District of Columbia' },
  { id: 'DE', name: 'Delaware', kind: AreaKind.State },
  { id: 'FL', name: 'Florida', kind: AreaKind.State },
  { id: 'GA', name: 'Georgia', kind: AreaKind.State },
  { id: 'GU', name: 'Guam', kind: AreaKind.Territory },
  { id: 'HI', name: 'Hawaii', kind: AreaKind.State },
  { id: 'IA', name: 'Iowa', kind: AreaKind.State },
  { id: 'ID', name: 'Idaho', kind: AreaKind.State },
  { id: 'IL', name: 'Illinois', kind: AreaKind.State },
  { id: 'IN', name: 'Indiana', kind: AreaKind.State },
  { id: 'KS', name: 'Kansas', kind: AreaKind.State },
  { id: 'KY', name: 'Kentucky', kind: AreaKind.Commonwealth },
  { id: 'LA', name: 'Louisiana', kind: AreaKind.State },
  { id: 'MA', name: 'Massachusetts', kind: AreaKind.Commonwealth },
  { id: 'MD', name: 'Maryland', kind: AreaKind.State },
  { id: 'ME', name: 'Maine', kind: AreaKind.State },
  { id: 'MI', name: 'Michigan', kind: AreaKind.State },
  { id: 'MN', name: 'Minnesota', kind: AreaKind.State },
  { id: 'MO', name: 'Missouri', kind: AreaKind.State },
  { id: 'MP', name: 'Northern Mariana Islands', kind: AreaKind.Territory },
  { id: 'MS', name: 'Mississippi', kind: AreaKind.State },
  { id: 'MT', name: 'Montana', kind: AreaKind.State },
  { id: 'NC', name: 'North Carolina', kind: AreaKind.State },
  { id: 'ND', name: 'North Dakota', kind: AreaKind.State },
  { id: 'NE', name: 'Nebraska', kind: AreaKind.State },
  { id: 'NH', name: 'New Hampshire', kind: AreaKind.State },
  { id: 'NJ', name: 'New Jersey', kind: AreaKind.State },
  { id: 'NM', name: 'New Mexico', kind: AreaKind.State },
  { id: 'NV', name: 'Nevada', kind: AreaKind.State },
  { id: 'NY', name: 'New York', kind: AreaKind.State },
  { id: 'OH', name: 'Ohio', kind: AreaKind.State },
  { id: 'OK', name: 'Oklahoma', kind: AreaKind.State },
  { id: 'OR', name: 'Oregon', kind: AreaKind.State },
  { id: 'PA', name: 'Pennsylvania', kind: AreaKind.Commonwealth },
  { id: 'PR', name: 'Puerto Rico', kind: AreaKind.Territory },
  { id: 'RI', name: 'Rhode Island', kind: AreaKind.State },
  { id: 'SC', name: 'South Carolina', kind: AreaKind.State },
  { id: 'SD', name: 'South Dakota', kind: AreaKind.State },
  { id: 'TN', name: 'Tennessee', kind: AreaKind.State },
  { id: 'TT', name: 'Trust Territories', kind: AreaKind.Territory },
  { id: 'TX', name: 'Texas', kind: AreaKind.State },
  { id: 'US', name: 'United States', kind: AreaKind.Federal, title: 'United States of America' },
  { id: 'UT', name: 'Utah', kind: AreaKind.State },
  { id: 'VA', name: 'Virginia', kind: AreaKind.Commonwealth },
  { id: 'VI', name: 'Virgin Islands', kind: AreaKind.Territory },
  { id: 'VT', name: 'Vermont', kind: AreaKind.State },
  { id: 'WA', name: 'Washington', kind: AreaKind.State },
  { id: 'WI', name: 'Wisconsin', kind: AreaKind.State },
  { id: 'WV', name: 'West Virginia', kind: AreaKind.State },
  { id: 'WY', name: 'Wyoming', kind: AreaKind.State },
]

export const stateById = (id: StateAbbreviation): AreaInfo => {
  const state = STATES.find((state) => state.id === id)

  if (!state) {
    throw new Error(`"${id}" is not a state or territory`)
  }

  return state
}
